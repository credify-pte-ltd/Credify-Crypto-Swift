// Objective-C API for talking to gitlab.com/credify.one/services/common/crypto Go package.
//   gobind -lang=objc gitlab.com/credify.one/services/common/crypto
//
// File is generated by gobind. Do not edit.

#ifndef __Crypto_H__
#define __Crypto_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class CryptoCipherText;
@class CryptoEncryptionKeyPair;
@class CryptoHashedText;
@class CryptoMaskedText;
@class CryptoSigningKeyPair;
@protocol CryptoEncryptionKey;
@class CryptoEncryptionKey;
@protocol CryptoSerializable;
@class CryptoSerializable;
@protocol CryptoSigningKey;
@class CryptoSigningKey;
@protocol CryptoVerificationKey;
@class CryptoVerificationKey;

@protocol CryptoEncryptionKey <NSObject>
- (NSData* _Nullable)bytes;
- (NSData* _Nullable)decrypt:(NSData* _Nullable)cipher error:(NSError* _Nullable* _Nullable)error;
- (NSData* _Nullable)decryptBase64:(NSString* _Nullable)cipher error:(NSError* _Nullable* _Nullable)error;
- (NSData* _Nullable)encrypt:(NSData* _Nullable)plain error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)encryptAsBase64:(NSData* _Nullable)plain error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)string;
@end

@protocol CryptoSerializable <NSObject>
- (NSData* _Nullable)bytes;
- (NSString* _Nonnull)string;
@end

@protocol CryptoSigningKey <NSObject>
- (NSData* _Nullable)bytes;
- (NSData* _Nullable)sign:(NSData* _Nullable)message error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)signAsBase64:(NSData* _Nullable)message error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)string;
@end

@protocol CryptoVerificationKey <NSObject>
- (NSData* _Nullable)bytes;
- (NSString* _Nonnull)string;
- (BOOL)verify:(NSData* _Nullable)signature message:(NSData* _Nullable)message valid:(BOOL* _Nullable)valid error:(NSError* _Nullable* _Nullable)error;
- (BOOL)verifyBase64:(NSString* _Nullable)signature message:(NSData* _Nullable)message valid:(BOOL* _Nullable)valid error:(NSError* _Nullable* _Nullable)error;
@end

@interface CryptoCipherText : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (NSString* _Nonnull)string;
@end

@interface CryptoEncryptionKeyPair : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) id<CryptoEncryptionKey> _Nullable privateKey;
@property (nonatomic) id<CryptoEncryptionKey> _Nullable publicKey;
@end

@interface CryptoHashedText : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (NSString* _Nonnull)string;
@end

@interface CryptoMaskedText : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) CryptoHashedText* _Nullable hash;
@property (nonatomic) CryptoCipherText* _Nullable cipher;
@end

@interface CryptoSigningKeyPair : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) id<CryptoSigningKey> _Nullable signingKey;
@property (nonatomic) id<CryptoVerificationKey> _Nullable verificationKey;
@end

FOUNDATION_EXPORT NSString* _Nonnull const CryptoPrivateKeyBlockType;
FOUNDATION_EXPORT NSString* _Nonnull const CryptoPublicKeyBlockType;
FOUNDATION_EXPORT const int64_t CryptoRsaKeyLength;

FOUNDATION_EXPORT CryptoCipherText* _Nullable CryptoCipherTextValue(NSString* _Nullable cipher);

FOUNDATION_EXPORT id<CryptoEncryptionKey> _Nullable CryptoEncryptionPrivateKeyFromPem(NSString* _Nullable pem);

FOUNDATION_EXPORT id<CryptoEncryptionKey> _Nullable CryptoEncryptionPublicKeyFromPEM(NSString* _Nullable pem);

FOUNDATION_EXPORT CryptoEncryptionKeyPair* _Nullable CryptoGenerateEncryptionKeyPair(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT CryptoSigningKeyPair* _Nullable CryptoGenerateSigningKeyPair(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable CryptoHash(NSData* _Nullable message);

FOUNDATION_EXPORT CryptoHashedText* _Nullable CryptoHashedTextValue(NSString* _Nullable hash);

FOUNDATION_EXPORT CryptoCipherText* _Nullable CryptoParseCipherText(NSString* _Nullable cipher);

FOUNDATION_EXPORT id<CryptoEncryptionKey> _Nullable CryptoParseEncryptionPrivateKey(NSString* _Nullable pem, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT id<CryptoEncryptionKey> _Nullable CryptoParseEncryptionPublicKey(NSString* _Nullable pem, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT CryptoHashedText* _Nullable CryptoParseHashedText(NSString* _Nullable hash);

FOUNDATION_EXPORT id<CryptoSigningKey> _Nullable CryptoParseSigningKey(NSString* _Nullable pem, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT id<CryptoVerificationKey> _Nullable CryptoParseVerificationKey(NSString* _Nullable pem, NSError* _Nullable* _Nullable error);

// skipped function PlainTextValue with unsupported parameter or return types


FOUNDATION_EXPORT id<CryptoSigningKey> _Nullable CryptoSigningKeyFromPEM(NSString* _Nullable pem);

FOUNDATION_EXPORT id<CryptoVerificationKey> _Nullable CryptoVerificationKeyFromPem(NSString* _Nullable pem);

FOUNDATION_EXPORT BOOL CryptoVerifyHash(NSData* _Nullable hash, NSData* _Nullable message);

@class CryptoEncryptionKey;

@class CryptoSerializable;

@class CryptoSigningKey;

@class CryptoVerificationKey;

@interface CryptoEncryptionKey : NSObject <goSeqRefInterface, CryptoEncryptionKey> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSData* _Nullable)bytes;
- (NSData* _Nullable)decrypt:(NSData* _Nullable)cipher error:(NSError* _Nullable* _Nullable)error;
- (NSData* _Nullable)decryptBase64:(NSString* _Nullable)cipher error:(NSError* _Nullable* _Nullable)error;
- (NSData* _Nullable)encrypt:(NSData* _Nullable)plain error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)encryptAsBase64:(NSData* _Nullable)plain error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)string;
@end

@interface CryptoSerializable : NSObject <goSeqRefInterface, CryptoSerializable> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSData* _Nullable)bytes;
- (NSString* _Nonnull)string;
@end

@interface CryptoSigningKey : NSObject <goSeqRefInterface, CryptoSigningKey> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSData* _Nullable)bytes;
- (NSData* _Nullable)sign:(NSData* _Nullable)message error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)signAsBase64:(NSData* _Nullable)message error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)string;
@end

@interface CryptoVerificationKey : NSObject <goSeqRefInterface, CryptoVerificationKey> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSData* _Nullable)bytes;
- (NSString* _Nonnull)string;
- (BOOL)verify:(NSData* _Nullable)signature message:(NSData* _Nullable)message valid:(BOOL* _Nullable)valid error:(NSError* _Nullable* _Nullable)error;
- (BOOL)verifyBase64:(NSString* _Nullable)signature message:(NSData* _Nullable)message valid:(BOOL* _Nullable)valid error:(NSError* _Nullable* _Nullable)error;
@end

#endif
